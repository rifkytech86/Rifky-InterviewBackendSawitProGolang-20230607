// Code generated by mockery v2.32.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IFileReader is an autogenerated mock type for the IFileReader type
type IFileReader struct {
	mock.Mock
}

// ReadFile provides a mock function with given fields: filename
func (_m *IFileReader) ReadFile(filename string) ([]byte, error) {
	ret := _m.Called(filename)

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]byte, error)); ok {
		return rf(filename)
	}
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(filename)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(filename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIFileReader creates a new instance of IFileReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIFileReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *IFileReader {
	mock := &IFileReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
